---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../lib/createSlug"

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const last_posts = posts.slice(0, 3);
---

<BaseLayout sideBarActiveItemID="home">
  <div class="pb-12 mt-5 text-center">
    <div class="text-3xl font-bold">Rafael Greca Vieira</div>
    <div class="text-0.5xl py-4 font-bold">Machine Learning Engineer and Data Scientist</div>
    <div class="py-2 text-justify">
      <text class="text-lg">
        Natural Language Processing, Python, MLOps, Deep Learning, and Machine Learning are among the topics that pique my interest. Also, I'm interested in working as a Machine Learning Engineer. Right now, I am studying about MLOps, Natural Language Processing, and PyTorch. In my spare time, I like to play (and watch) basketball and soccer, learn new languages (currently, I am improving my English and planning to learn Italian!), watch horror and thriller movies, and work on personal projects. Enjoy your stay!
      </text>
    </div>
  </div>

  <div>
    <div class="text-3xl w-full font-bold mb-2">Lastest Projects</div>
  </div>

  <HorizontalCard
    title="Numbeo Scraper"
    img="/numbeo.webp"
    desc="In order to save time when searching for information about the quality of life in a particular country or city, the project's goal is to use web scraping frameworks (in this case, the BeautifulSoup4 library) to extract data from Numbeo's website."
    url="https://github.com/rafaelgreca/e2e-mlops-project"
    badge="NEW"
    tags={["Python", "Web Scraping", "GitHub Actions"]}
  />

  <HorizontalCard
    title="End-to-end MLOps Project"
    img="/e2e.webp"
    desc="The purpose of this project's design, development, and structure is to create an end-to-end Machine Learning Operations (MLOps) lifecycle to classify an individual's level of obesity based on their physical characteristics and eating habits."
    url="https://github.com/rafaelgreca/e2e-mlops-project"
    tags={["Machine Learning", "MLOps", "Python", "Obesity Level Classification", "Multiclass Classification", "End-to-end"]}
  />
  
  <HorizontalCard
    title="ScratchML"
    img="/scratchml.webp"
    desc="A Python library called ScratchML was created to build the most fundamental Machine Learning models from scratch (using only Numpy), emphasizing producing user-friendly, straightforward, and easy-to-use implementations for novices and enthusiasts."
    url="https://github.com/rafaelgreca/scratchml"
    tags={["Machine Learning", "Deep Learning", "Scratch", "Algorithms"]}
  />
  
  <HorizontalCard
    title="MLflow with Natural Language Processing"
    img="/imdb.webp"
    desc="In this project, we trained a Random Forest, XGBoost, and a BERT model to predict movies' genres based on their descriptions using an IMDb dataset hosted on Kaggle's website. Its main goal was to understand the applicability of the MLflow framework and how to use it to track different models during the training and evaluation steps, while also learning about the model's versioning and registry."
    url="https://github.com/rafaelgreca/mlflow-example"
    tags={["MLOps", "NLP", "MLflow", "Python", "Text Classification", "Machine Learning"]}
  />

  <div>
    <div class="text-3xl w-full font-bold mb-2">Latest Posts</div>
  </div>

  {
    last_posts.map((post) => (
      <>
        <HorizontalCard
          title={post.data.title}
          img={post.data.heroImage}
          desc={post.data.description}
          url={"/blog/" + createSlug(post.data.title, post.slug)}
          target="_self"
          badge={post.data.badge}
        />
      </>
    ))
  }

  <div>
    <div class="text-3xl w-full font-bold mb-2">Lastest Publications</div>
  </div>

  <HorizontalCard
    title="Unsupervised Clustering for Internal Combustion Engines Health Monitoring"
    desc="We present an unsupervised machine learning approach designed to aid in the health monitoring of internal combustion engines, enabling the early detection of possible failures or degradation over time. Our methodology uses temporal data collected from a datalogger device connected to a vehicle's On-Board Diagnostics system. This data serves as input for a clustering machine learning model, which is trained incrementally over time to detect anomalies in multivariate time series. The decision-making process to categorize cluster behaviors as anomalies, which might be indicative of engine degradation over time, is based on several key metrics, such as the Jaccard similarity coefficient, relative cluster population, stability, and movement of the centroid over time. The proposed approach is validated on a public rotating machine dataset and tested on an internal combustion engine of a medium-sized vehicle in idle condition."
    badge="NEW"
    url="https://pdf.blucher.com.br/engineeringproceedings/simea2024/PAP32.pdf"
    tags={["Machine Learning", "Engine", "Unsupervised Learning", "Clystering", "Internal Combustion"]}
  />

</BaseLayout>
