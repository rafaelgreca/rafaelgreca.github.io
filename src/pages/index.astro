---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../lib/createSlug"

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const last_posts = posts.slice(0, 3);
---

<BaseLayout sideBarActiveItemID="home">
  <div class="pb-12 mt-5">
    <div class="text-xl py-1">Hi, welcome!</div>
    <div class="text-3xl font-bold">I'm Rafael Greca Vieira</div>
    <div class="text-2xl py-3 font-bold">Machine Learning Researcher</div>
    <div class="py-2">
      <text class="text-lg">
        I am interested in Machine Learning, Deep Learning, Python, Natural Language Processing, Signal Processing, Algorithms, MLOps, and applications in mental health. Right now, I am studying about MLOps, Natural Language Processing, and PyTorch. In my spare time, I like to play (and watch) basketball and soccer, learn new languages (currently, I am improving my English and planning to learn Italian!), watch horror and thriller movies, and work on personal projects. Enjoy your stay!
      </text>
    </div>
  </div>

  <div>
    <div class="text-3xl w-full font-bold mb-2">Lastest projects</div>
  </div>

  <HorizontalCard
    title="ScratchML"
    img="/scratchml.webp"
    desc="A Python library called ScratchML was created to build the most fundamental Machine Learning models from scratch (using only Numpy), emphasizing producing user-friendly, straightforward, and easy-to-use implementations for novices and enthusiasts."
    url="https://github.com/rafaelgreca/scratchml"
    badge="NEW"
    tags={["Machine Learning", "Deep Learning", "Scratch", "Algorithms"]}
  />
  <HorizontalCard
    title="MLflow with Natural Language Processing"
    img="/imdb.webp"
    desc="In this project, we trained a Random Forest, XGBoost, and a BERT model to predict movies' genres based on their descriptions using an IMDb dataset hosted on Kaggle's website. Its main goal was to understand the applicability of the MLflow framework and how to use it to track different models during the training and evaluation steps, while also learning about the model's versioning and registry."
    url="https://github.com/rafaelgreca/mlflow-example"
    tags={["MLOps","NLP","MLflow", "Python", "Text Classification", "Deep Learning", "Machine Learning"]}
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="Disaster Tweet Classification"
    img="/disaster.webp"
    desc="This project aims to create a Deep Learning model designed to tackle Natural Language Processing with Disaster Tweets competition proposed by Kaggle. However, it's not focused on training and evaluating different algorithms to see which has a better performance on Kaggle's ranking, but rather on building an application using Flask and Docker to use the training dataset to build and train a BERT model and then use it to make predictions on the test dataset."
    url="https://github.com/rafaelgreca/disaster-tweet-classification"
    tags={["NLP","MLflow", "Python", "Flask", "Text Classification", "Deep Learning", "Machine Learning"]}
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="Speech Emotion Recognition using Deep Learning and Discrete Wavelet Transform"
    img="/speech.webp"
    desc="A deep learning solution using Convolutional Neural Networks and Wavelet Transform to tackle the Speech Emotion Recognition task. Repository dedicated to the developed solution for the end-of-course work of the University of SÃ£o Paulo's Master in Business Administration (MBA) in Artificial Intelligence and Big Data program."
    url="https://github.com/rafaelgreca/ser-wavelet"
    tags={["NLP","Speech Emotion Recognition", "Python", "Wavelet Transform", "Deep Learning"]}
  />

  <!--
  <div>
    <div class="text-3xl w-full font-bold mb-5 mt-10">Latest posts</div>
  </div>

  {
    last_posts.map((post) => (
      <>
        <HorizontalCard
          title={post.data.title}
          img={post.data.heroImage}
          desc={post.data.description}
          url={"/blog/" + createSlug(post.data.title, post.slug)}
          target="_self"
          badge={post.data.badge}
        />
        <div class="divider my-0" />
      </>
    ))
  }
  -->
</BaseLayout>
