---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
---

<BaseLayout title = "Projects" sideBarActiveItemID="projects">
  <div>
    <div class="text-3xl w-full font-bold mb-5">Projects</div>
  </div>

  <HorizontalCard
    title="Numbeo Scraper"
    img="/numbeo.webp"
    desc="In order to save time when searching for information about the quality of life in a particular country or city, the project's goal is to use web scraping frameworks (in this case, the BeautifulSoup4 library) to extract data from Numbeo's website."
    url="https://github.com/rafaelgreca/e2e-mlops-project"
    badge="NEW"
    tags={["Python", "Web Scraping", "GitHub Actions"]}
  />

  <div class="divider my-0"></div>
  
  <HorizontalCard
    title="End-to-end MLOps Project"
    img="/e2e.webp"
    desc="The purpose of this project's design, development, and structure is to create an end-to-end Machine Learning Operations (MLOps) lifecycle to classify an individual's level of obesity based on their physical characteristics and eating habits."
    url="https://github.com/rafaelgreca/e2e-mlops-project"
    tags={["Machine Learning", "MLOps", "Python", "Obesity Level Classification", "Multiclass Classification", "End-to-end"]}
  />

  <div class="divider my-0"></div>

  <HorizontalCard
    title="ScratchML"
    img="/scratchml.webp"
    desc="A Python library called ScratchML was created to build the most fundamental Machine Learning models from scratch (using only Numpy), emphasizing producing user-friendly, straightforward, and easy-to-use implementations for novices and enthusiasts."
    url="https://github.com/rafaelgreca/scratchml"
    tags={["Machine Learning", "Deep Learning", "Scratch", "Algorithms", "Python"]}
  />
  
  <div class="divider my-0"></div>

  <HorizontalCard
    title="MLflow with Natural Language Processing"
    img="/imdb.webp"
    desc="In this project, we trained a Random Forest, XGBoost, and a BERT model to predict movies' genres based on their descriptions using an IMDb dataset hosted on Kaggle's website. Its main goal was to understand the applicability of the MLflow framework and how to use it to track different models during the training and evaluation steps, while also learning about the model's versioning and registry."
    url="https://github.com/rafaelgreca/mlflow-example"
    tags={["MLOps", "NLP", "MLflow", "Python", "Text Classification", "Deep Learning", "Machine Learning", "PyTorch"]}
  />
  
  <div class="divider my-0"></div>
  
  <HorizontalCard
    title="Disaster Tweet Classification"
    img="/disaster.webp"
    desc="This project aims to create a Deep Learning model designed to tackle Natural Language Processing with Disaster Tweets competition proposed by Kaggle. However, it's not focused on training and evaluating different algorithms to see which has a better performance on Kaggle's ranking, but rather on building an application using Flask and Docker to use the training dataset to build and train a BERT model and then use it to make predictions on the test dataset."
    url="https://github.com/rafaelgreca/disaster-tweet-classification"
    tags={["NLP","MLflow", "Python", "Flask", "Text Classification", "Deep Learning", "Machine Learning", "PyTorch"]}
  />
  
  <div class="divider my-0"></div>
  
  <HorizontalCard
    title="Speech Emotion Recognition using Deep Learning and Discrete Wavelet Transform"
    img="/speech.webp"
    desc="A deep learning solution using Convolutional Neural Networks and Wavelet Transform to tackle the Speech Emotion Recognition task. Repository dedicated to the developed solution for the end-of-course work of the University of São Paulo's Master in Business Administration (MBA) in Artificial Intelligence and Big Data program."
    url="https://github.com/rafaelgreca/ser-wavelet"
    tags={["NLP","Speech Emotion Recognition", "Python", "Wavelet Transform", "Deep Learning", "PyTorch"]}
  />
  
  <div class="divider my-0"></div>
  
  <HorizontalCard
    title="Voxseg PyTorch"
    img="/voice.webp"
    desc="The non-official Voice Activity Detection (VAD) Voxseg model implementation in PyTorch. Voxseg is a python library for voice activity detection (VAD) for speech/non-speech segmentation."
    url="https://github.com/rafaelgreca/voxseg-pytorch"
    tags={["NLP","Voice Activity Detection", "Python", "PyTorch", "Deep Learning"]}
  />
  
  <div class="divider my-0"></div>
  
  <HorizontalCard
    title="Classification of Hate Speech Tweets using Deep Learning Models (Portuguese Only)"
    img="/hate.webp"
    desc="Comparison of deep learning models (Convolutional Neural Networks and LSTM) performance in classifying English tweets containing hate speech. Repository dedicated to the developed solution for the end-of-course work of the Federal University of Itajubá's Bachelor in Computer Science."
    url="https://github.com/rafaelgreca/voxseg-pytorch"
    tags={["NLP","Hate Speech", "Text Classification", "Python", "Keras", "Deep Learning"]}
  />

</BaseLayout>
